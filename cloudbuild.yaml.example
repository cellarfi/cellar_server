steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '--platform', 'linux/amd64', '-t', 'gcr.io/YOUR_PROJECT_ID/solana-app-server', '.']
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/YOUR_PROJECT_ID/solana-app-server']
  
  # Grant Cloud SQL Client role to service account
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud projects add-iam-policy-binding YOUR_PROJECT_ID \
          --member="serviceAccount:YOUR_SERVICE_ACCOUNT@YOUR_PROJECT_ID.iam.gserviceaccount.com" \
          --role="roles/cloudsql.client"
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'solana-app-server'
      - '--image=gcr.io/YOUR_PROJECT_ID/solana-app-server'
      - '--platform=managed'
      - '--region=REGION'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--timeout=300s'
      - '--add-cloudsql-instances=YOUR_PROJECT_ID:REGION:YOUR_INSTANCE_NAME'
      - '--service-account=YOUR_SERVICE_ACCOUNT@YOUR_PROJECT_ID.iam.gserviceaccount.com'
      - '--set-env-vars=NODE_ENV=production,DISABLE_MIGRATIONS=true,WALLET_PRIVATE_KEY=YOUR_WALLET_PRIVATE_KEY,RPC_URL=YOUR_RPC_URL,TOKEN_MILL_PROGRAMID=YOUR_TOKEN_MILL_PROGRAMID,TOKEN_MILL_CONFIG_PDA=YOUR_TOKEN_MILL_CONFIG_PDA,SWAP_AUTHORITY_KEY=YOUR_SWAP_AUTHORITY_KEY,DATABASE_URL=postgresql://DB_USER:DB_PASS@/DB_NAME?host=/cloudsql/YOUR_PROJECT_ID:REGION:YOUR_INSTANCE_NAME,GCS_BUCKET_NAME=YOUR_BUCKET_NAME,SERVICE_ACCOUNT_EMAIL=YOUR_SERVICE_ACCOUNT_EMAIL@YOUR_PROJECT_ID.iam.gserviceaccount.com,INSTANCE_CONNECTION_NAME=YOUR_PROJECT_ID:REGION:YOUR_INSTANCE_NAME,DB_USER=YOUR_DB_USER,DB_PASS=YOUR_DB_PASS,DB_NAME=YOUR_DB_NAME,WEBSOCKET_ENABLED=true'

images:
  - 'gcr.io/YOUR_PROJECT_ID/solana-app-server'

timeout: '1800s' 